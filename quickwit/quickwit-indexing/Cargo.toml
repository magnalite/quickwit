[package]
name = "quickwit-indexing"
version = "0.6.1"
authors = ["Quickwit, Inc. <hello@quickwit.io>"]
edition = "2021"
license = "AGPL-3.0-or-later"                           # For a commercial, license, contact hello@quickwit.io
description = "Quickwit indexing"
repository = "https://github.com/quickwit-oss/quickwit"
homepage = "https://quickwit.io/"
documentation = "https://quickwit.io/docs/"

[dependencies]
aws-config = { workspace = true, optional = true }
aws-smithy-client = { workspace = true, optional = true }
aws-sdk-kinesis = { workspace = true, optional = true }

anyhow = { workspace = true }
arc-swap = { workspace = true }
async-trait = { workspace = true }
backoff = { workspace = true, optional = true }
byte-unit = { workspace = true }
bytes = { workspace = true }
chitchat = { workspace = true }
fail = { workspace = true }
flume = { workspace = true }
fnv = { workspace = true }
futures = { workspace = true }
itertools = { workspace = true }
libz-sys = { workspace = true, optional = true }
once_cell = { workspace = true }
oneshot = { workspace = true }
openssl = { workspace = true, optional = true }
pulsar = { workspace = true, optional = true }
quickwit-query = { workspace = true }
rdkafka = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
tantivy = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
time = { workspace = true }
tokio = { workspace = true }
tokio-stream = { workspace = true }
tracing = { workspace = true }
ulid = { workspace = true }
utoipa = { workspace = true }
vrl = { workspace = true }
vrl-stdlib = { workspace = true }
#google-cloud-bigquery = { path = "../../../google-cloud-rust/bigquery" }
#google-cloud-default = { path = "../../../google-cloud-rust/default", features = ["bigquery"] }
#google-cloud-googleapis = { path = "../../../google-cloud-rust/googleapis", features = ["bigquery"] }
google-cloud-bigquery = "0.1.1"
google-cloud-default = { version = "0.4.0", features = ["bigquery"] }
google-cloud-googleapis = { version = "0.10.0", features = ["bigquery"] }
google-cloud-gax = "0.15.0"

quickwit-actors = { workspace = true }
quickwit-aws = { workspace = true }
quickwit-cluster = { workspace = true }
quickwit-common = { workspace = true }
quickwit-config = { workspace = true }
quickwit-directories = { workspace = true }
quickwit-doc-mapper = { workspace = true }
quickwit-grpc-clients = { workspace = true }
quickwit-ingest = { workspace = true }
quickwit-metastore = { workspace = true }
quickwit-proto = { workspace = true }
quickwit-storage = { workspace = true }

[features]
kafka = ["rdkafka", "backoff"]
kafka-broker-tests = []
vendored-kafka = ["kafka", "libz-sys/static", "openssl/vendored", "rdkafka/gssapi-vendored"]
vendored-kafka-macos = ["kafka", "libz-sys/static", "openssl/vendored"]
kinesis = ["aws-config", "aws-smithy-client", "aws-sdk-kinesis", "quickwit-aws/kinesis"]
kinesis-localstack-tests = []
pulsar = ["dep:pulsar"]
pulsar-broker-tests = []
testsuite = [
  "quickwit-actors/testsuite",
  "quickwit-cluster/testsuite",
  "quickwit-common/testsuite",
]

[dev-dependencies]
bytes = { workspace = true }
criterion = { workspace = true, features = ["async_tokio"] }
mockall = { workspace = true }
proptest = { workspace = true }
rand = { workspace = true }
tempfile = { workspace = true }
reqwest = { workspace = true }

quickwit-actors = { workspace = true, features = ["testsuite"] }
quickwit-cluster = { workspace = true, features = ["testsuite"] }
quickwit-doc-mapper = { workspace = true, features = ["testsuite"] }
quickwit-common = { workspace = true, features = ["testsuite"] }
quickwit-config = { workspace = true, features = ["testsuite"] }
quickwit-metastore = { workspace = true, features = ["testsuite"] }
quickwit-storage = { workspace = true, features = ["testsuite"] }

[[test]]
name = "failpoints"
path = "failpoints/mod.rs"
required-features = ["fail/failpoints"]

[[bench]]
name = "doc_process_vrl_bench"
harness = false
